x-default-django:
  &default-django
  build:
    context: ./django
    dockerfile: Dockerfile
    args:
      UNAME: "${USER:-app}"
      UID: "${UID:-1000}"
      REQUIREMENTS: "${REQUIREMENTS:-/requirements/dev.pip}"
  env_file:
    - .env
  environment:
    environment:
    DJANGO_SETTINGS_MODULE: core.settings.dev
    DJANGO_SUPERUSER_EMAIL: super@example.com
    DJANGO_SUPERUSER_PASSWORD: secret
  volumes:
    - ./django:/home/${USER:-app}/code

services:
  #--development only--#
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: django
      POSTGRES_PASSWORD: django
      POSTGRES_DB: django
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: unless-stopped
  #--------------------#

  redis:
    image: redis:7
    command: redis-server --save 60 1 --appendonly yes --loglevel warning
    restart: unless-stopped

  django:
    << : *default-django
    command: python manage.py runserver 0.0.0.0:8000 --nostatic
    entrypoint: /home/${USER:-app}/code/entrypoint.sh
    expose:
      - "8000"
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  huey:
    << : *default-django
    command: python manage.py run_huey
    depends_on:
      - django
    restart: unless-stopped

  caddy:
    image: caddy:2
    command: "caddy run --config /etc/caddy/Caddyfile.dev --adapter caddyfile"
    env_file:
      - .env
    ports:
      - "${PORT:-81}:${PORT:-81}"
    volumes:
      - ./caddy:/etc/caddy
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - django
    restart: unless-stopped

volumes:
  caddy_data:
  caddy_config:
  postgres_data:
